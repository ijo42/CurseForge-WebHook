plugins {
    id 'java'
    id 'application'
}

version = '1.0.0' // not used. only git release tags
group = "de.erdbeerbaerlp.curseforge" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
mainClassName = 'de.erdbeerbaerlp.curseforge.Starter'
repositories {
    jcenter()
    maven {
        url "https://jitpack.io"
    }
}
configurations {
    embed
    compile.extendsFrom(embed)
}
dependencies {
    embed("com.github.TheRandomLabs:CurseAPI:master-SNAPSHOT"){
        transitive = true
    }
    embed group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    embed group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    embed group: 'com.google.code.gson', name:'gson', version: '2.8.6'
    embed group: 'commons-cli', name: 'commons-cli', version: '1.4'
    embed group: 'com.typesafe', name: 'config', version: '1.4.1'
}
jar {
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
    manifest {
        attributes([
                'Main-Class': mainClassName,
                "Specification-Title": project.name,
                "Specification-Vendor": "ijo42",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Vendor" :"ijo42",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Git-Commit-Hash": getGitHash()
        ])
    }
    from 'LICENSE'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.incremental = true // one flag, and things will get so MUCH faster
    sourceCompatibility = targetCompatibility = '1.8'
}
jar.archiveName("${project.archivesBaseName}.jar")

static def getGitHash() {
    try {
        def process = 'git rev-parse --short HEAD'.execute()
        process.waitFor()
        return (process.exitValue() ? 'unknown' : process.text.trim())
    }catch(IOException ignored){
        return 'unknown'
    }
}
defaultTasks 'build'

